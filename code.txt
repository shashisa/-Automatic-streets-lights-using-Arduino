// Pin definitions
const int ldrPin = A0; // LDR connected to analog pin A0
const int trigPin = 9; // Ultrasonic sensor trigger pin
const int echoPin = 10; // Ultrasonic sensor echo pin
const int ledPins[] = {3, 5, 6, 7}; // LEDs connected to pins 3, 5, 6, 7

// Threshold for light intensity (adjust based on testing)
const int lightThreshold = 500;

// Ultrasonic sensor constants
const int distanceThreshold = 100; // Distance in cm to activate lights

void setup() {
  // Initialize serial communication
  Serial.begin(9600);

  // Set LED pins as OUTPUT
  for (int i = 0; i < 4; i++) {
    pinMode(ledPins[i], OUTPUT);
  }

  // Set ultrasonic sensor pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
}

void loop() {
  // Read LDR value
  int ldrValue = analogRead(ldrPin);
  Serial.print("LDR Value: ");
  Serial.println(ldrValue);

  // Check if light level is below the threshold
  if (ldrValue < lightThreshold) {
    // Measure distance using the ultrasonic sensor
    long distance = getDistance();
    Serial.print("Distance: ");
    Serial.println(distance);

    // Turn on all LEDs if distance is within the threshold
    if (distance < distanceThreshold) {
      for (int i = 0; i < 4; i++) {
        digitalWrite(ledPins[i], HIGH);
      }
    } else {
      // Turn off all LEDs if no object is detected
      for (int i = 0; i < 4; i++) {
        digitalWrite(ledPins[i], LOW);
      }
    }
  } else {
    // Turn off LEDs during daylight
    for (int i = 0; i < 4; i++) {
      digitalWrite(ledPins[i], LOW);
    }
  }

  delay(500); // Small delay to stabilize readings
}

// Function to measure distance using the ultrasonic sensor
long getDistance() {
  // Send a 10-microsecond pulse to trigger pin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Read the echo pin
  long duration = pulseIn(echoPin, HIGH);

  // Calculate distance in cm
  long distance = duration * 0.034 / 2;
  return distance;
}
